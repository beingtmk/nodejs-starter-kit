# Entity
type Category {
  id: Int
  title: String
  imageUrl: String
  description: String
  isNavbar: Boolean
  parentCategoryId: Int

  subCategories: [Category]

  isActive: Boolean
}

type Categories {
  totalCount: Int
  edges: [CategoryEdges]
  pageInfo: CategoryPageInfo
  rangeValues: RangeValues
}

type CategoryEdges {
  node: Category
  cursor: Int
}

type CategoryPageInfo {
  endCursor: Int
  hasNextPage: Boolean
}

extend type Query {
  categories(
    limit: Int!
    after: Int!
    orderBy: OrderByCategoryInput
    filter: FilterCategoryInput
  ): Categories
  category(id: Int): Category
}

input OrderByCategoryInput {
  column: String
  order: String
}
input FilterCategoryInput {
  searchText: String
  isActive: Boolean
}

extend type Mutation {
  addCategory(input: AddCategoryInput!): Boolean
  editCategory(input: EditCategoryInput!): Boolean
  deleteCategory(id: Int!): Boolean
}

input AddCategoryInput {
  title: String
  imageUrl: String
  description: String
  isNavbar: Boolean
  parentCategoryId: Int
}

input EditCategoryInput {
  id: Int
  title: String
  imageUrl: String
  description: String
  isNavbar: Boolean
  parentCategoryId: Int
}

# extend type Subscription {
#   subscriptionName: TypeName
# }
