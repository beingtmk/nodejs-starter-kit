# Entity
type Discount {
  id: Int
  modalId: Int
  modalName: String
  discountPercent: Int
  isActive: Boolean
  discountDuration: DiscountDuration
}

type DiscountDuration {
  startDate: String
  endDate: String
  isActive: Boolean
}

type Discounts {
  totalCount: Int
  edges: [DiscountEdges]
  pageInfo: DiscountPageInfo
  # rangeValues: RangeValues
}

type DiscountEdges {
  node: Discount
  cursor: Int
}

type DiscountPageInfo {
  endCursor: Int
  hasNextPage: Boolean
}

extend type Query {
  discounts(
    limit: Int!
    after: Int!
    orderBy: OrderByDiscountInput
    filter: FilterDiscountInput
  ): Discounts
}

input OrderByDiscountInput {
  column: String
  order: String
}

input FilterDiscountInput {
  isActive: Boolean
  isDiscount: Boolean
  onGoing: Boolean
  upComming: Boolean
}

# extend type Mutation {
#   mutationName(varName: Int!): TypeName
# }

# extend type Subscription {
#   subscriptionName: TypeName
# }
